---
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import { getI18N } from '@i18n/index';

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);
const dataCV = getI18N({ currentLang });
const { basics } = dataCV
---

<section>
	<h1>
		{t('hero.greeting')} {t('hero.mynameis')} <span class="my-name">{basics.name}</span>
	</h1>
	<p class="summary">{basics.summary}</p>
	<a href="#experience" class="btn">
		<i class="ti ti-arrow-down"></i>
	</a>
</section>

<style>
	section {
		grid-area: hero;
		display: flex;
		align-items: center;
    flex-direction: column;
    justify-content: center;
		min-height: calc(100vh - var(--header-height));
		position: relative;
	}
	h1 {
		line-height: 1.2;
		margin-bottom: 1rem;
		letter-spacing: .2rem;
		flex-wrap: wrap;		
		align-items: center;
    flex-direction: column;
    justify-content: center;
		display: flex;
		@media (width >= 768px) {
    	flex-direction: row;
		}
		@media (width >= 1280px) {
			display: inline-flex;
		}
	}
	.my-name {
		border-right: .2rem solid transparent;
		margin-left: 10px;
		@media (width >= 1280px) {
			animation: typing 2s steps(25) 1s 1 normal both, blink .7s steps(1) 0s 6;
			margin-left: 20px;
			max-width: fit-content;
			overflow: hidden;
			white-space: nowrap;
		}
	}
	.summary {
		text-align: center;
	}
	.btn {
		position: absolute;
		bottom: 0;
		i {
			font-size: 2rem;
			font-weight: 100;
		}
	}

	@keyframes blink {
		50% { border-color: var(--blink-color); }
	}
	@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
	}
</style>